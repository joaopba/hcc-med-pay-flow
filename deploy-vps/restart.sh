#!/bin/bash

# üîÑ Script de Reinicializa√ß√£o - HCC Med Pay Flow

# Cores
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
RED='\033[0;31m'
NC='\033[0m'

show_help() {
    echo "üîÑ Reinicializa√ß√£o de Servi√ßos - HCC Med Pay Flow"
    echo ""
    echo "Uso: ./restart.sh [op√ß√£o]"
    echo ""
    echo "Op√ß√µes:"
    echo "  nginx      Reiniciar apenas Nginx"
    echo "  ssl        Renovar SSL e reiniciar Nginx"
    echo "  all        Reiniciar todos os servi√ßos (padr√£o)"
    echo "  deploy     Fazer novo deploy da aplica√ß√£o"
    echo "  help       Mostrar esta ajuda"
}

restart_nginx() {
    echo -e "${BLUE}üåê Reiniciando Nginx...${NC}"
    
    # Testar configura√ß√£o primeiro
    echo "üîß Testando configura√ß√£o do Nginx..."
    if nginx -t; then
        echo -e "${GREEN}‚úÖ Configura√ß√£o v√°lida${NC}"
        
        echo "üîÑ Reiniciando servi√ßo..."
        if systemctl restart nginx; then
            echo -e "${GREEN}‚úÖ Nginx reiniciado com sucesso${NC}"
            
            # Verificar status
            if systemctl is-active --quiet nginx; then
                echo -e "${GREEN}‚úÖ Nginx est√° rodando${NC}"
            else
                echo -e "${RED}‚ùå Nginx n√£o est√° rodando ap√≥s reinicializa√ß√£o${NC}"
                return 1
            fi
        else
            echo -e "${RED}‚ùå Falha ao reiniciar Nginx${NC}"
            return 1
        fi
    else
        echo -e "${RED}‚ùå Configura√ß√£o inv√°lida do Nginx${NC}"
        echo "üîß Para ver detalhes: nginx -t"
        return 1
    fi
}

renew_ssl() {
    echo -e "${BLUE}üîí Renovando certificado SSL...${NC}"
    
    # Verificar se certbot est√° instalado
    if ! command -v certbot &> /dev/null; then
        echo -e "${RED}‚ùå Certbot n√£o est√° instalado${NC}"
        return 1
    fi
    
    # Renovar certificados
    echo "üîÑ Executando renova√ß√£o..."
    if certbot renew --quiet; then
        echo -e "${GREEN}‚úÖ Certificados verificados/renovados${NC}"
        
        # Recarregar nginx para usar novos certificados
        echo "üîÑ Recarregando Nginx..."
        if systemctl reload nginx; then
            echo -e "${GREEN}‚úÖ Nginx recarregado${NC}"
        else
            echo -e "${YELLOW}‚ö†Ô∏è Falha ao recarregar Nginx${NC}"
        fi
    else
        echo -e "${YELLOW}‚ö†Ô∏è Renova√ß√£o n√£o necess√°ria ou falhou${NC}"
    fi
}

restart_firewall() {
    echo -e "${BLUE}üõ°Ô∏è Reiniciando Firewall...${NC}"
    
    if systemctl restart ufw; then
        echo -e "${GREEN}‚úÖ UFW reiniciado${NC}"
        
        # Reativar se necess√°rio
        ufw --force enable > /dev/null 2>&1
        
        if systemctl is-active --quiet ufw; then
            echo -e "${GREEN}‚úÖ UFW est√° ativo${NC}"
        fi
    else
        echo -e "${RED}‚ùå Falha ao reiniciar UFW${NC}"
    fi
}

restart_all() {
    echo -e "${BLUE}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
    echo -e "${BLUE}‚ïë             üîÑ REINICIALIZA√á√ÉO COMPLETA                      ‚ïë${NC}"
    echo -e "${BLUE}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
    echo ""
    
    # 1. Nginx
    restart_nginx
    nginx_status=$?
    echo ""
    
    # 2. Firewall
    restart_firewall
    echo ""
    
    # 3. SSL (se nginx OK)
    if [ $nginx_status -eq 0 ]; then
        renew_ssl
        echo ""
    fi
    
    # 4. Verifica√ß√£o final
    echo -e "${BLUE}üß™ Verifica√ß√£o p√≥s-reinicializa√ß√£o...${NC}"
    
    # Aguardar estabiliza√ß√£o
    sleep 3
    
    # Testar conectividade
    DOMAIN="hcc.chatconquista.com"
    
    echo "üåê Testando HTTP..."
    http_code=$(curl -s -o /dev/null -w "%{http_code}" "http://$DOMAIN" 2>/dev/null || echo "000")
    if [[ "$http_code" =~ ^[23] ]]; then
        echo -e "${GREEN}‚úÖ HTTP OK ($http_code)${NC}"
    else
        echo -e "${RED}‚ùå HTTP falhou ($http_code)${NC}"
    fi
    
    echo "üîí Testando HTTPS..."
    https_code=$(curl -s -o /dev/null -w "%{http_code}" "https://$DOMAIN" 2>/dev/null || echo "000")
    if [[ "$https_code" =~ ^[23] ]]; then
        echo -e "${GREEN}‚úÖ HTTPS OK ($https_code)${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è HTTPS falhou ($https_code)${NC}"
    fi
    
    # Status dos servi√ßos
    echo ""
    echo -e "${BLUE}üìä Status final dos servi√ßos:${NC}"
    services=("nginx" "ufw")
    all_ok=true
    
    for service in "${services[@]}"; do
        if systemctl is-active --quiet $service; then
            echo -e "   ‚Ä¢ $service: ${GREEN}‚úÖ Ativo${NC}"
        else
            echo -e "   ‚Ä¢ $service: ${RED}‚ùå Inativo${NC}"
            all_ok=false
        fi
    done
    
    echo ""
    if [ "$all_ok" = true ] && [[ "$http_code" =~ ^[23] ]]; then
        echo -e "${GREEN}üéâ REINICIALIZA√á√ÉO CONCLU√çDA COM SUCESSO!${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è REINICIALIZA√á√ÉO CONCLU√çDA COM AVISOS${NC}"
        echo "   Execute ./status.sh para mais detalhes"
    fi
}

deploy_app() {
    echo -e "${BLUE}üöÄ Fazendo novo deploy da aplica√ß√£o...${NC}"
    
    if [ -f "./deploy-app.sh" ]; then
        chmod +x ./deploy-app.sh
        if ./deploy-app.sh; then
            echo -e "${GREEN}‚úÖ Deploy conclu√≠do${NC}"
            
            # Reiniciar nginx ap√≥s deploy
            echo "üîÑ Reiniciando Nginx..."
            restart_nginx
        else
            echo -e "${RED}‚ùå Falha no deploy${NC}"
        fi
    else
        echo -e "${RED}‚ùå Script deploy-app.sh n√£o encontrado${NC}"
    fi
}

# Verificar se √© root para opera√ß√µes cr√≠ticas
check_root() {
    if [ "$EUID" -ne 0 ]; then
        echo -e "${RED}‚ùå Este comando requer privil√©gios de root${NC}"
        echo "   Execute: sudo ./restart.sh $1"
        exit 1
    fi
}

# Processar argumentos
case "${1:-all}" in
    "nginx")
        check_root "nginx"
        restart_nginx
        ;;
    "ssl")
        check_root "ssl"
        renew_ssl
        ;;
    "all")
        check_root "all"
        restart_all
        ;;
    "deploy")
        check_root "deploy"
        deploy_app
        ;;
    "help"|"-h"|"--help")
        show_help
        ;;
    *)
        echo -e "${RED}‚ùå Op√ß√£o inv√°lida: $1${NC}"
        echo ""
        show_help
        exit 1
        ;;
esac